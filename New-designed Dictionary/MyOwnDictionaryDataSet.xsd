<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MyOwnDictionaryDataSet" targetNamespace="http://tempuri.org/MyOwnDictionaryDataSet.xsd" xmlns:mstns="http://tempuri.org/MyOwnDictionaryDataSet.xsd" xmlns="http://tempuri.org/MyOwnDictionaryDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MyOwnDictionaryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MyOwnDictionaryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.New_designed_Dictionary.Properties.Settings.GlobalReference.Default.MyOwnDictionaryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PartsOfSpeechTableAdapter" GeneratorDataComponentClassName="PartsOfSpeechTableAdapter" Name="PartsOfSpeech" UserDataComponentName="PartsOfSpeechTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.PartsOfSpeech" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PartsOfSpeech] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PartsOfSpeech] ([Name]) VALUES (@Name);
SELECT Id, Name FROM PartsOfSpeech WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.PartsOfSpeech</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PartsOfSpeech] SET [Name] = @Name WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name));
SELECT Id, Name FROM PartsOfSpeech WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="MyOwnDictionary.dbo.PartsOfSpeech" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="relSourcesWordUnitTableAdapter" GeneratorDataComponentClassName="relSourcesWordUnitTableAdapter" Name="relSourcesWordUnit" UserDataComponentName="relSourcesWordUnitTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.relSourcesWordUnit" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[relSourcesWordUnit] WHERE (([SourceId] = @Original_SourceId) AND ([WordUnitId] = @Original_WordUnitId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SourceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[relSourcesWordUnit] ([SourceId], [WordUnitId]) VALUES (@SourceId, @WordUnitId);
SELECT SourceId, WordUnitId FROM relSourcesWordUnit WHERE (SourceId = @SourceId) AND (WordUnitId = @WordUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SourceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SourceId, WordUnitId FROM dbo.relSourcesWordUnit</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[relSourcesWordUnit] SET [SourceId] = @SourceId, [WordUnitId] = @WordUnitId WHERE (([SourceId] = @Original_SourceId) AND ([WordUnitId] = @Original_WordUnitId));
SELECT SourceId, WordUnitId FROM relSourcesWordUnit WHERE (SourceId = @SourceId) AND (WordUnitId = @WordUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SourceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SourceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SourceId" DataSetColumn="SourceId" />
              <Mapping SourceColumn="WordUnitId" DataSetColumn="WordUnitId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="relWordUnitPartOfSpeechTableAdapter" GeneratorDataComponentClassName="relWordUnitPartOfSpeechTableAdapter" Name="relWordUnitPartOfSpeech" UserDataComponentName="relWordUnitPartOfSpeechTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.relWordUnitPartOfSpeech" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[relWordUnitPartOfSpeech] WHERE (([WordUnitId] = @Original_WordUnitId) AND ([PartOfSpeechId] = @Original_PartOfSpeechId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PartOfSpeechId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PartOfSpeechId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[relWordUnitPartOfSpeech] ([WordUnitId], [PartOfSpeechId]) VALUES (@WordUnitId, @PartOfSpeechId);
SELECT WordUnitId, PartOfSpeechId FROM relWordUnitPartOfSpeech WHERE (PartOfSpeechId = @PartOfSpeechId) AND (WordUnitId = @WordUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PartOfSpeechId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PartOfSpeechId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WordUnitId, PartOfSpeechId FROM dbo.relWordUnitPartOfSpeech</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[relWordUnitPartOfSpeech] SET [WordUnitId] = @WordUnitId, [PartOfSpeechId] = @PartOfSpeechId WHERE (([WordUnitId] = @Original_WordUnitId) AND ([PartOfSpeechId] = @Original_PartOfSpeechId));
SELECT WordUnitId, PartOfSpeechId FROM relWordUnitPartOfSpeech WHERE (PartOfSpeechId = @PartOfSpeechId) AND (WordUnitId = @WordUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PartOfSpeechId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PartOfSpeechId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PartOfSpeechId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PartOfSpeechId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WordUnitId" DataSetColumn="WordUnitId" />
              <Mapping SourceColumn="PartOfSpeechId" DataSetColumn="PartOfSpeechId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="relWordUnitSphereOfUsageTableAdapter" GeneratorDataComponentClassName="relWordUnitSphereOfUsageTableAdapter" Name="relWordUnitSphereOfUsage" UserDataComponentName="relWordUnitSphereOfUsageTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.relWordUnitSphereOfUsage" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[relWordUnitSphereOfUsage] WHERE (([WordUnitId] = @Original_WordUnitId) AND ([SphereOfUsageId] = @Original_SphereOfUsageId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SphereOfUsageId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SphereOfUsageId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[relWordUnitSphereOfUsage] ([WordUnitId], [SphereOfUsageId]) VALUES (@WordUnitId, @SphereOfUsageId);
SELECT WordUnitId, SphereOfUsageId FROM relWordUnitSphereOfUsage WHERE (SphereOfUsageId = @SphereOfUsageId) AND (WordUnitId = @WordUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SphereOfUsageId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SphereOfUsageId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WordUnitId, SphereOfUsageId FROM dbo.relWordUnitSphereOfUsage</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[relWordUnitSphereOfUsage] SET [WordUnitId] = @WordUnitId, [SphereOfUsageId] = @SphereOfUsageId WHERE (([WordUnitId] = @Original_WordUnitId) AND ([SphereOfUsageId] = @Original_SphereOfUsageId));
SELECT WordUnitId, SphereOfUsageId FROM relWordUnitSphereOfUsage WHERE (SphereOfUsageId = @SphereOfUsageId) AND (WordUnitId = @WordUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SphereOfUsageId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SphereOfUsageId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WordUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WordUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SphereOfUsageId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SphereOfUsageId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WordUnitId" DataSetColumn="WordUnitId" />
              <Mapping SourceColumn="SphereOfUsageId" DataSetColumn="SphereOfUsageId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SourcesTableAdapter" GeneratorDataComponentClassName="SourcesTableAdapter" Name="Sources" UserDataComponentName="SourcesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.Sources" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sources] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sources] ([Name], [Picture]) VALUES (@Name, @Picture);
SELECT Id, Name, Picture FROM Sources WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Picture" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Picture" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Picture FROM dbo.Sources</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sources] SET [Name] = @Name, [Picture] = @Picture WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name));
SELECT Id, Name, Picture FROM Sources WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Picture" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Picture" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="MyOwnDictionary.dbo.Sources" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Picture" DataSetColumn="Picture" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SpheresOfUsageTableAdapter" GeneratorDataComponentClassName="SpheresOfUsageTableAdapter" Name="SpheresOfUsage" UserDataComponentName="SpheresOfUsageTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.SpheresOfUsage" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SpheresOfUsage] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SpheresOfUsage] ([Name]) VALUES (@Name);
SELECT Id, Name FROM SpheresOfUsage WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.SpheresOfUsage</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SpheresOfUsage] SET [Name] = @Name WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name));
SELECT Id, Name FROM SpheresOfUsage WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="MyOwnDictionary.dbo.SpheresOfUsage" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ThemesTableAdapter" GeneratorDataComponentClassName="ThemesTableAdapter" Name="Themes" UserDataComponentName="ThemesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.Themes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Themes] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([BrightColor] = @Original_BrightColor) AND ([PallidColor] = @Original_PallidColor) AND ([IsSelected] = @Original_IsSelected))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BrightColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BrightColor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PallidColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PallidColor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsSelected" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSelected" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Themes] ([Name], [BrightColor], [PallidColor], [IsSelected], [Picture]) VALUES (@Name, @BrightColor, @PallidColor, @IsSelected, @Picture);
SELECT Id, Name, BrightColor, PallidColor, IsSelected, Picture FROM Themes WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BrightColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BrightColor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PallidColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PallidColor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsSelected" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSelected" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Picture" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Picture" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, BrightColor, PallidColor, IsSelected, Picture FROM dbo.Themes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Themes] SET [Name] = @Name, [BrightColor] = @BrightColor, [PallidColor] = @PallidColor, [IsSelected] = @IsSelected, [Picture] = @Picture WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([BrightColor] = @Original_BrightColor) AND ([PallidColor] = @Original_PallidColor) AND ([IsSelected] = @Original_IsSelected));
SELECT Id, Name, BrightColor, PallidColor, IsSelected, Picture FROM Themes WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BrightColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BrightColor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PallidColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PallidColor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsSelected" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSelected" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Picture" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Picture" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BrightColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BrightColor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PallidColor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PallidColor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsSelected" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSelected" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="MyOwnDictionary.dbo.Themes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="BrightColor" DataSetColumn="BrightColor" />
              <Mapping SourceColumn="PallidColor" DataSetColumn="PallidColor" />
              <Mapping SourceColumn="IsSelected" DataSetColumn="IsSelected" />
              <Mapping SourceColumn="Picture" DataSetColumn="Picture" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WordUnitsTableAdapter" GeneratorDataComponentClassName="WordUnitsTableAdapter" Name="WordUnits" UserDataComponentName="WordUnitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyOwnDictionaryConnectionString (Settings)" DbObjectName="MyOwnDictionary.dbo.WordUnits" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[WordUnits] WHERE (([Id] = @Original_Id) AND ([ContentOfUnit] = @Original_ContentOfUnit) AND ([Meaning] = @Original_Meaning) AND ([Example] = @Original_Example) AND ([Note] = @Original_Note) AND ([IsFormal] = @Original_IsFormal))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContentOfUnit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContentOfUnit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Meaning" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Example" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Example" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsFormal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFormal" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[WordUnits] ([ContentOfUnit], [Meaning], [Example], [Note], [IsFormal]) VALUES (@ContentOfUnit, @Meaning, @Example, @Note, @IsFormal);
SELECT Id, ContentOfUnit, Meaning, Example, Note, IsFormal FROM WordUnits WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContentOfUnit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContentOfUnit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Meaning" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Example" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Example" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsFormal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFormal" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, ContentOfUnit, Meaning, Example, Note, IsFormal FROM dbo.WordUnits</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[WordUnits] SET [ContentOfUnit] = @ContentOfUnit, [Meaning] = @Meaning, [Example] = @Example, [Note] = @Note, [IsFormal] = @IsFormal WHERE (([Id] = @Original_Id) AND ([ContentOfUnit] = @Original_ContentOfUnit) AND ([Meaning] = @Original_Meaning) AND ([Example] = @Original_Example) AND ([Note] = @Original_Note) AND ([IsFormal] = @Original_IsFormal));
SELECT Id, ContentOfUnit, Meaning, Example, Note, IsFormal FROM WordUnits WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContentOfUnit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContentOfUnit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Meaning" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Example" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Example" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsFormal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFormal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContentOfUnit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContentOfUnit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Meaning" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Example" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Example" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsFormal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFormal" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="MyOwnDictionary.dbo.WordUnits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="ContentOfUnit" DataSetColumn="ContentOfUnit" />
              <Mapping SourceColumn="Meaning" DataSetColumn="Meaning" />
              <Mapping SourceColumn="Example" DataSetColumn="Example" />
              <Mapping SourceColumn="Note" DataSetColumn="Note" />
              <Mapping SourceColumn="IsFormal" DataSetColumn="IsFormal" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MyOwnDictionaryDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MyOwnDictionaryDataSet" msprop:Generator_UserDSName="MyOwnDictionaryDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="PartsOfSpeech" msprop:Generator_TableClassName="PartsOfSpeechDataTable" msprop:Generator_TableVarName="tablePartsOfSpeech" msprop:Generator_TablePropName="PartsOfSpeech" msprop:Generator_RowDeletingName="PartsOfSpeechRowDeleting" msprop:Generator_RowChangingName="PartsOfSpeechRowChanging" msprop:Generator_RowEvHandlerName="PartsOfSpeechRowChangeEventHandler" msprop:Generator_RowDeletedName="PartsOfSpeechRowDeleted" msprop:Generator_UserTableName="PartsOfSpeech" msprop:Generator_RowChangedName="PartsOfSpeechRowChanged" msprop:Generator_RowEvArgName="PartsOfSpeechRowChangeEvent" msprop:Generator_RowClassName="PartsOfSpeechRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="relSourcesWordUnit" msprop:Generator_TableClassName="relSourcesWordUnitDataTable" msprop:Generator_TableVarName="tablerelSourcesWordUnit" msprop:Generator_TablePropName="relSourcesWordUnit" msprop:Generator_RowDeletingName="relSourcesWordUnitRowDeleting" msprop:Generator_RowChangingName="relSourcesWordUnitRowChanging" msprop:Generator_RowEvHandlerName="relSourcesWordUnitRowChangeEventHandler" msprop:Generator_RowDeletedName="relSourcesWordUnitRowDeleted" msprop:Generator_UserTableName="relSourcesWordUnit" msprop:Generator_RowChangedName="relSourcesWordUnitRowChanged" msprop:Generator_RowEvArgName="relSourcesWordUnitRowChangeEvent" msprop:Generator_RowClassName="relSourcesWordUnitRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SourceId" msprop:Generator_ColumnVarNameInTable="columnSourceId" msprop:Generator_ColumnPropNameInRow="SourceId" msprop:Generator_ColumnPropNameInTable="SourceIdColumn" msprop:Generator_UserColumnName="SourceId" type="xs:int" />
              <xs:element name="WordUnitId" msprop:Generator_ColumnVarNameInTable="columnWordUnitId" msprop:Generator_ColumnPropNameInRow="WordUnitId" msprop:Generator_ColumnPropNameInTable="WordUnitIdColumn" msprop:Generator_UserColumnName="WordUnitId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="relWordUnitPartOfSpeech" msprop:Generator_TableClassName="relWordUnitPartOfSpeechDataTable" msprop:Generator_TableVarName="tablerelWordUnitPartOfSpeech" msprop:Generator_TablePropName="relWordUnitPartOfSpeech" msprop:Generator_RowDeletingName="relWordUnitPartOfSpeechRowDeleting" msprop:Generator_RowChangingName="relWordUnitPartOfSpeechRowChanging" msprop:Generator_RowEvHandlerName="relWordUnitPartOfSpeechRowChangeEventHandler" msprop:Generator_RowDeletedName="relWordUnitPartOfSpeechRowDeleted" msprop:Generator_UserTableName="relWordUnitPartOfSpeech" msprop:Generator_RowChangedName="relWordUnitPartOfSpeechRowChanged" msprop:Generator_RowEvArgName="relWordUnitPartOfSpeechRowChangeEvent" msprop:Generator_RowClassName="relWordUnitPartOfSpeechRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WordUnitId" msprop:Generator_ColumnVarNameInTable="columnWordUnitId" msprop:Generator_ColumnPropNameInRow="WordUnitId" msprop:Generator_ColumnPropNameInTable="WordUnitIdColumn" msprop:Generator_UserColumnName="WordUnitId" type="xs:int" />
              <xs:element name="PartOfSpeechId" msprop:Generator_ColumnVarNameInTable="columnPartOfSpeechId" msprop:Generator_ColumnPropNameInRow="PartOfSpeechId" msprop:Generator_ColumnPropNameInTable="PartOfSpeechIdColumn" msprop:Generator_UserColumnName="PartOfSpeechId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="relWordUnitSphereOfUsage" msprop:Generator_TableClassName="relWordUnitSphereOfUsageDataTable" msprop:Generator_TableVarName="tablerelWordUnitSphereOfUsage" msprop:Generator_TablePropName="relWordUnitSphereOfUsage" msprop:Generator_RowDeletingName="relWordUnitSphereOfUsageRowDeleting" msprop:Generator_RowChangingName="relWordUnitSphereOfUsageRowChanging" msprop:Generator_RowEvHandlerName="relWordUnitSphereOfUsageRowChangeEventHandler" msprop:Generator_RowDeletedName="relWordUnitSphereOfUsageRowDeleted" msprop:Generator_UserTableName="relWordUnitSphereOfUsage" msprop:Generator_RowChangedName="relWordUnitSphereOfUsageRowChanged" msprop:Generator_RowEvArgName="relWordUnitSphereOfUsageRowChangeEvent" msprop:Generator_RowClassName="relWordUnitSphereOfUsageRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WordUnitId" msprop:Generator_ColumnVarNameInTable="columnWordUnitId" msprop:Generator_ColumnPropNameInRow="WordUnitId" msprop:Generator_ColumnPropNameInTable="WordUnitIdColumn" msprop:Generator_UserColumnName="WordUnitId" type="xs:int" />
              <xs:element name="SphereOfUsageId" msprop:Generator_ColumnVarNameInTable="columnSphereOfUsageId" msprop:Generator_ColumnPropNameInRow="SphereOfUsageId" msprop:Generator_ColumnPropNameInTable="SphereOfUsageIdColumn" msprop:Generator_UserColumnName="SphereOfUsageId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sources" msprop:Generator_TableClassName="SourcesDataTable" msprop:Generator_TableVarName="tableSources" msprop:Generator_TablePropName="Sources" msprop:Generator_RowDeletingName="SourcesRowDeleting" msprop:Generator_RowChangingName="SourcesRowChanging" msprop:Generator_RowEvHandlerName="SourcesRowChangeEventHandler" msprop:Generator_RowDeletedName="SourcesRowDeleted" msprop:Generator_UserTableName="Sources" msprop:Generator_RowChangedName="SourcesRowChanged" msprop:Generator_RowEvArgName="SourcesRowChangeEvent" msprop:Generator_RowClassName="SourcesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Picture" msprop:Generator_ColumnVarNameInTable="columnPicture" msprop:Generator_ColumnPropNameInRow="Picture" msprop:Generator_ColumnPropNameInTable="PictureColumn" msprop:Generator_UserColumnName="Picture" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SpheresOfUsage" msprop:Generator_TableClassName="SpheresOfUsageDataTable" msprop:Generator_TableVarName="tableSpheresOfUsage" msprop:Generator_TablePropName="SpheresOfUsage" msprop:Generator_RowDeletingName="SpheresOfUsageRowDeleting" msprop:Generator_RowChangingName="SpheresOfUsageRowChanging" msprop:Generator_RowEvHandlerName="SpheresOfUsageRowChangeEventHandler" msprop:Generator_RowDeletedName="SpheresOfUsageRowDeleted" msprop:Generator_UserTableName="SpheresOfUsage" msprop:Generator_RowChangedName="SpheresOfUsageRowChanged" msprop:Generator_RowEvArgName="SpheresOfUsageRowChangeEvent" msprop:Generator_RowClassName="SpheresOfUsageRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Themes" msprop:Generator_TableClassName="ThemesDataTable" msprop:Generator_TableVarName="tableThemes" msprop:Generator_TablePropName="Themes" msprop:Generator_RowDeletingName="ThemesRowDeleting" msprop:Generator_RowChangingName="ThemesRowChanging" msprop:Generator_RowEvHandlerName="ThemesRowChangeEventHandler" msprop:Generator_RowDeletedName="ThemesRowDeleted" msprop:Generator_UserTableName="Themes" msprop:Generator_RowChangedName="ThemesRowChanged" msprop:Generator_RowEvArgName="ThemesRowChangeEvent" msprop:Generator_RowClassName="ThemesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BrightColor" msprop:Generator_ColumnVarNameInTable="columnBrightColor" msprop:Generator_ColumnPropNameInRow="BrightColor" msprop:Generator_ColumnPropNameInTable="BrightColorColumn" msprop:Generator_UserColumnName="BrightColor">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PallidColor" msprop:Generator_ColumnVarNameInTable="columnPallidColor" msprop:Generator_ColumnPropNameInRow="PallidColor" msprop:Generator_ColumnPropNameInTable="PallidColorColumn" msprop:Generator_UserColumnName="PallidColor">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsSelected" msprop:Generator_ColumnVarNameInTable="columnIsSelected" msprop:Generator_ColumnPropNameInRow="IsSelected" msprop:Generator_ColumnPropNameInTable="IsSelectedColumn" msprop:Generator_UserColumnName="IsSelected" type="xs:boolean" />
              <xs:element name="Picture" msprop:Generator_ColumnVarNameInTable="columnPicture" msprop:Generator_ColumnPropNameInRow="Picture" msprop:Generator_ColumnPropNameInTable="PictureColumn" msprop:Generator_UserColumnName="Picture" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WordUnits" msprop:Generator_TableClassName="WordUnitsDataTable" msprop:Generator_TableVarName="tableWordUnits" msprop:Generator_TablePropName="WordUnits" msprop:Generator_RowDeletingName="WordUnitsRowDeleting" msprop:Generator_RowChangingName="WordUnitsRowChanging" msprop:Generator_RowEvHandlerName="WordUnitsRowChangeEventHandler" msprop:Generator_RowDeletedName="WordUnitsRowDeleted" msprop:Generator_UserTableName="WordUnits" msprop:Generator_RowChangedName="WordUnitsRowChanged" msprop:Generator_RowEvArgName="WordUnitsRowChangeEvent" msprop:Generator_RowClassName="WordUnitsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="ContentOfUnit" msprop:Generator_ColumnVarNameInTable="columnContentOfUnit" msprop:Generator_ColumnPropNameInRow="ContentOfUnit" msprop:Generator_ColumnPropNameInTable="ContentOfUnitColumn" msprop:Generator_UserColumnName="ContentOfUnit">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Meaning" msprop:Generator_ColumnVarNameInTable="columnMeaning" msprop:Generator_ColumnPropNameInRow="Meaning" msprop:Generator_ColumnPropNameInTable="MeaningColumn" msprop:Generator_UserColumnName="Meaning">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Example" msprop:Generator_ColumnVarNameInTable="columnExample" msprop:Generator_ColumnPropNameInRow="Example" msprop:Generator_ColumnPropNameInTable="ExampleColumn" msprop:Generator_UserColumnName="Example">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Note" msprop:Generator_ColumnVarNameInTable="columnNote" msprop:Generator_ColumnPropNameInRow="Note" msprop:Generator_ColumnPropNameInTable="NoteColumn" msprop:Generator_UserColumnName="Note">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsFormal" msprop:Generator_ColumnVarNameInTable="columnIsFormal" msprop:Generator_ColumnPropNameInRow="IsFormal" msprop:Generator_ColumnPropNameInTable="IsFormalColumn" msprop:Generator_UserColumnName="IsFormal" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PartsOfSpeech" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="relSourcesWordUnit_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:relSourcesWordUnit" />
      <xs:field xpath="mstns:SourceId" />
      <xs:field xpath="mstns:WordUnitId" />
    </xs:unique>
    <xs:unique name="relWordUnitPartOfSpeech_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:relWordUnitPartOfSpeech" />
      <xs:field xpath="mstns:WordUnitId" />
      <xs:field xpath="mstns:PartOfSpeechId" />
    </xs:unique>
    <xs:unique name="relWordUnitSphereOfUsage_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:relWordUnitSphereOfUsage" />
      <xs:field xpath="mstns:WordUnitId" />
      <xs:field xpath="mstns:SphereOfUsageId" />
    </xs:unique>
    <xs:unique name="Sources_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sources" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="SpheresOfUsage_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SpheresOfUsage" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Themes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Themes" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="WordUnits_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WordUnits" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_relSourcesWordUnit_Sources" msdata:parent="Sources" msdata:child="relSourcesWordUnit" msdata:parentkey="Id" msdata:childkey="SourceId" msprop:Generator_UserChildTable="relSourcesWordUnit" msprop:Generator_ChildPropName="GetrelSourcesWordUnitRows" msprop:Generator_UserRelationName="FK_relSourcesWordUnit_Sources" msprop:Generator_RelationVarName="relationFK_relSourcesWordUnit_Sources" msprop:Generator_UserParentTable="Sources" msprop:Generator_ParentPropName="SourcesRow" />
      <msdata:Relationship name="FK_relSourcesWordUnit_WordUnits" msdata:parent="WordUnits" msdata:child="relSourcesWordUnit" msdata:parentkey="Id" msdata:childkey="WordUnitId" msprop:Generator_UserChildTable="relSourcesWordUnit" msprop:Generator_ChildPropName="GetrelSourcesWordUnitRows" msprop:Generator_UserRelationName="FK_relSourcesWordUnit_WordUnits" msprop:Generator_RelationVarName="relationFK_relSourcesWordUnit_WordUnits" msprop:Generator_UserParentTable="WordUnits" msprop:Generator_ParentPropName="WordUnitsRow" />
      <msdata:Relationship name="FK_relWordUnitPartOfSpeech_PartsOfSpeech" msdata:parent="PartsOfSpeech" msdata:child="relWordUnitPartOfSpeech" msdata:parentkey="Id" msdata:childkey="PartOfSpeechId" msprop:Generator_UserChildTable="relWordUnitPartOfSpeech" msprop:Generator_ChildPropName="GetrelWordUnitPartOfSpeechRows" msprop:Generator_UserRelationName="FK_relWordUnitPartOfSpeech_PartsOfSpeech" msprop:Generator_ParentPropName="PartsOfSpeechRow" msprop:Generator_RelationVarName="relationFK_relWordUnitPartOfSpeech_PartsOfSpeech" msprop:Generator_UserParentTable="PartsOfSpeech" />
      <msdata:Relationship name="FK_relWordUnitPartOfSpeech_WordUnits" msdata:parent="WordUnits" msdata:child="relWordUnitPartOfSpeech" msdata:parentkey="Id" msdata:childkey="WordUnitId" msprop:Generator_UserChildTable="relWordUnitPartOfSpeech" msprop:Generator_ChildPropName="GetrelWordUnitPartOfSpeechRows" msprop:Generator_UserRelationName="FK_relWordUnitPartOfSpeech_WordUnits" msprop:Generator_RelationVarName="relationFK_relWordUnitPartOfSpeech_WordUnits" msprop:Generator_UserParentTable="WordUnits" msprop:Generator_ParentPropName="WordUnitsRow" />
      <msdata:Relationship name="FK_relWordUnitSphereOfUsage_SpheresOfUsage" msdata:parent="SpheresOfUsage" msdata:child="relWordUnitSphereOfUsage" msdata:parentkey="Id" msdata:childkey="SphereOfUsageId" msprop:Generator_UserChildTable="relWordUnitSphereOfUsage" msprop:Generator_ChildPropName="GetrelWordUnitSphereOfUsageRows" msprop:Generator_UserRelationName="FK_relWordUnitSphereOfUsage_SpheresOfUsage" msprop:Generator_RelationVarName="relationFK_relWordUnitSphereOfUsage_SpheresOfUsage" msprop:Generator_UserParentTable="SpheresOfUsage" msprop:Generator_ParentPropName="SpheresOfUsageRow" />
      <msdata:Relationship name="FK_relWordUnitSphereOfUsage_WordUnits" msdata:parent="WordUnits" msdata:child="relWordUnitSphereOfUsage" msdata:parentkey="Id" msdata:childkey="WordUnitId" msprop:Generator_UserChildTable="relWordUnitSphereOfUsage" msprop:Generator_ChildPropName="GetrelWordUnitSphereOfUsageRows" msprop:Generator_UserRelationName="FK_relWordUnitSphereOfUsage_WordUnits" msprop:Generator_RelationVarName="relationFK_relWordUnitSphereOfUsage_WordUnits" msprop:Generator_UserParentTable="WordUnits" msprop:Generator_ParentPropName="WordUnitsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>